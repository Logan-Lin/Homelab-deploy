services:
  # Media server for TV shows, movies, and music
  plex:
    image: linuxserver/plex:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
    volumes:
      - ./data/plex/config:/config
      - ${PLEX_TRANSCODE_PATH}:/transcode
      - ${MEDIA_PATH}:/data
    ports:
      - "32400:32400"
    networks:
      - default
      - proxy
    devices:
      - /dev/dri:/dev/dri

  # Another media server
  emby:
    image: amilys/embyserver:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/emby/config:/config
      - ${EMBY_TRANSCODE_PATH}:/transcode
      - ${MEDIA_PATH}:/data
    ports:
      - "8096:8096"
    networks:
      - default
      - proxy
    devices:
      - /dev/dri:/dev/dri
  
  # Audio server for podcasts and audiobooks
  audio:
    image: ghcr.io/advplyr/audiobookshelf
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/audio/config:/config
      - ./data/audio/metadata:/metadata
      - ${PODCAST_PATH}:/podcast
    networks:
      - default
      - proxy
  
  # TV show management system
  sonarr:
    image: linuxserver/sonarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/sonarr/config:/config
      - ${MEDIA_PATH}:/data
    networks:
      - default
      - proxy

  # Movie management system
  radarr:
    image: linuxserver/radarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/radarr/config:/config
      - ${MEDIA_PATH}:/data
    networks:
      - default
      - proxy

  # Music management system
  lidarr:
    image: linuxserver/lidarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/lidarr/config:/config
      - ${MEDIA_PATH}:/data
    networks:
      - default
      - proxy

  # Subtitle management system
  bazarr:
    image: linuxserver/bazarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./data/bazarr/config:/config
      - ${MEDIA_PATH}:/data
    networks:
      - default
      - proxy
  
  # Torrent download client
  qbit:
    image: linuxserver/qbittorrent:4.6.7
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TORRENTING_PORT=${QBIT_TORRENT_PORT}
      - WEBUI_PORT=8080
    volumes:
      - ./data/qbit/config:/config
      - ${MEDIA_PATH}:/data
    ports:
      - "${QBIT_TORRENT_PORT}:${QBIT_TORRENT_PORT}"
    networks:
      - default
      - proxy
  
  # Home photo and video backup system
  immich:
    image: ghcr.io/imagegenius/immich
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DB_HOSTNAME=immich-db
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE_NAME=postgres
      - DB_PORT=5432
      - REDIS_HOSTNAME=immich-redis
      - REDIS_PORT=6379
      - MACHINE_LEARNING_HOST=0.0.0.0
      - MACHINE_LEARNING_PORT=3003
      - MACHINE_LEARNING_WORKERS=1
      - MACHINE_LEARNING_WORKER_TIMEOUT=120
    volumes:
      - ./data/immich/config:/config
      - ${PHOTO_PATH}:/photos
      - ${DCIM_PATH}:/libraries
    ports:
      - "5000:8080"
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      immich-db:
        condition: service_healthy
      immich-redis:
        condition: service_healthy
    networks:
      - default
      - proxy

  # Database for immich, with vector extension for context search
  immich-db:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/immich/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      start_period: 30s

  # Redis for immich
  immich-redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s


networks:
  br0:
    external: true
  proxy:
    external: true
